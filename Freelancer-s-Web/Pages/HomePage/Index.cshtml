@page
@model Freelancer_s_Web.Pages.HomePage.IndexModel

@{
    @using Freelancer_s_Web.Models;
    @using Freelancer_s_Web.ViewModel
    @using Microsoft.AspNetCore.Http;
    @using Utils
    LoginUserVM loginUser = CustomAuthorization.loginUser;
    ViewData["Title"] = "Home page";

}
<style>


    .filterDiv {
        display: none;
    }

    .filterDiv2 {
        display: none;
    }

    .show {
        display: contents;
    }
</style>
<h1>HomePage</h1>

<div class="row">
    <div class="col-sm-4 mb-4">
        <input type="text" id="myFilter" class="form-control" onkeyup="myFunction()" placeholder="Search for card name...">
    </div>
</div>



<div id="myBtnContainer" class="card d-flex flex-row">
    <h3 class="mx-3 my-3">Discovery</h3>
    @{if (loginUser == null)
        {

        }
        else if (loginUser.Role == "USER")
        {
        <div class="ml-auto mx-3 my-3">
            <button class="btn active btn-primary" onclick="filterSelection2('all')"> Show all</button>
            <button class="btn btn-primary" onclick="filterSelection2('@CustomAuthorization.loginUser.Id')">My Post</button>
        </div>
        }
        else
        {

        }
    }
</div>

<br />
<div id="myBtnContainer">
    <button class="btn active" onclick="filterSelection('all')"> Show all</button>
    <button class="btn" onclick="filterSelection('6')"> SE</button>
    <button class="btn" onclick="filterSelection('7')">SA</button>
    <button class="btn" onclick="filterSelection('8')">IA</button>
    <button class="btn" onclick="filterSelection('9')">AI</button>
    <button class="btn" onclick="filterSelection('10')">General</button>
</div>
<div id="myProducts">
    @foreach (var item in Model.Post)
    {

    <div class="filterDiv @Html.DisplayFor(modelItem => item.MajorId)">
        <div class="filterDiv2 @Html.DisplayFor(modelItem => item.UserId) ">
            <a asp-page="/PostPage/Details" asp-route-id="@item.Id">
                <div class="card box-shadow my-5">
                    <div class="text-dark  d-flex flex-row card-title p-2">
                        <h2>@Html.DisplayFor(modelItem => item.Title)</h2>
                        <div class="text-dark ml-auto">
                            <span>@item.User.DisplayName</span>

                            <img class="rounded-circle mx-1 border" src="@item.User.Avatar" width="27" height="27" />
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="text-dark card-text">@Html.DisplayFor(modelItem => item.Description).</p>
                        <p class="text-dark card-text">@Html.DisplayFor(modelItem => item.Major.Name).</p>
                        <p class="text-dark card-text"></p>
                        <div class="d-flex flex-row">
                            <p class=" text-dark card-text">Comment: @Html.DisplayFor(modelItem => item.Comments.Count).</p>
                            
                            <a asp-page="/ApplicationPages/Create" asp-route-postId="@item.Id" class="btn btn-primary ml-auto">Apply</a>

                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>
      


    }
</div>
<script defer>
    function myFunction() {
        var input, filter, cards, cardContainer, title, i;
        input = document.getElementById("myFilter");
        filter = input.value.toUpperCase();
        cardContainer = document.getElementById("myProducts");
        cards = cardContainer.getElementsByClassName("card");
        for (i = 0; i < cards.length; i++) {
            title = cards[i].querySelector(".card-title");
            if (title.innerText.toUpperCase().indexOf(filter) > -1) {
                cards[i].style.display = "";
            } else {
                cards[i].style.display = "none";
            }
        }
    }
    filterSelection("all")
    function filterSelection(c) {
        var x, i;
        x = document.getElementsByClassName("filterDiv");
        if (c == "all") c = "";
        for (i = 0; i < x.length; i++) {
            w3RemoveClass(x[i], "show");
            if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], "show");
        }
    }
    filterSelection2("all")
    function filterSelection2(c) {
        var x, i;
        x = document.getElementsByClassName("filterDiv2");
        if (c == "all") c = "";
        for (i = 0; i < x.length; i++) {
            w3RemoveClass(x[i], "show");
            if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], "show");
        }
    }
    function w3AddClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            if (arr1.indexOf(arr2[i]) == -1) { element.className += " " + arr2[i]; }
        }
    }

    function w3RemoveClass(element, name) {
        var i, arr1, arr2;
        arr1 = element.className.split(" ");
        arr2 = name.split(" ");
        for (i = 0; i < arr2.length; i++) {
            while (arr1.indexOf(arr2[i]) > -1) {
                arr1.splice(arr1.indexOf(arr2[i]), 1);
            }
        }
        element.className = arr1.join(" ");
    }

    // Add active class to the current button (highlight it)
    var btnContainer = document.getElementById("myBtnContainer");
    var btns = btnContainer.getElementsByClassName("btn");
    for (var i = 0; i < btns.length; i++) {
        btns[i].addEventListener("click", function () {
            var current = document.getElementsByClassName("active");
            current[0].className = current[0].className.replace(" active", "");
            this.className += " active";
        });
    }



</script>
